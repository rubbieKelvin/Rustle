// .api File Format Grammar

// Ignore whitespace and comments
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT    = _{ "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE | "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

// Basic Tokens
IDENTIFIER = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
NUMBER     = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
BOOLEAN    =  { "true" | "false" }
NULL       =  { "null" }
STRING     = @{ "\"" ~ ("\\\"" | !"\"" ~ ANY)* ~ "\"" }
// Basic string with escaped quotes

// Keywords
KEYWORD_ENV          = { "@env" }
KEYWORD_END          = { "@end" }
KEYWORD_REQUEST      = { "@request" }
KEYWORD_METHOD       = { "METHOD" }
KEYWORD_URL          = { "URL" }
KEYWORD_CONFIG       = { "@config" }
KEYWORD_HEADERS      = { "@headers" }
KEYWORD_QUERY        = { "@query" }
KEYWORD_BODY         = { "@body" }
KEYWORD_VARIABLES    = { "@variables" }
KEYWORD_SCRIPT       = { "@script" }
KEYWORD_POST_REQUEST = { "post-request" }
KEYWORD_DEPENDS_ON   = { "depends-on" }
KEYWORD_DELAY        = { "delay" }
KEYWORD_TIMEOUT      = { "timeout" }
KEYWORD_RETRIES      = { "retries" }
KEYWORD_FIELD        = { "field" }
KEYWORD_FILE         = { "file" }
KEYWORD_TYPE         = { "type" }
KEYWORD_CALL         = { "@call" }

// HTTP Methods
HTTP_METHOD = { "GET" | "POST" | "PUT" | "DELETE" | "PATCH" | "HEAD" | "OPTIONS" }
// Common methods

// Value types (used in headers, query, env, etc.)
value = {
    STRING
  | NUMBER
  | BOOLEAN
  | NULL
  | array
  | object
  | variable_interpolation
  | duration
}

array          = { "[" ~ (value ~ ("," ~ value)*)? ~ "]" }
object         = { "{" ~ (key_value_pair ~ ("," ~ key_value_pair)*)? ~ "}" }
key_value_pair = { (STRING | IDENTIFIER) ~ ":" ~ value }

// Variable Interpolation (e.g., {{variable_name}}, {{variable | filter: "arg"}}, {{function()}})
variable_interpolation = @{ "{{" ~ (!"}}" ~ ANY)* ~ "}}" }

// Duration format (e.g., 500ms, 1s, 2m, 1h)
duration = @{ NUMBER ~ ("ms" | "s" | "m" | "h") }

// File path (used in @body:multipart file directive)
file_path = @{ STRING }
// Treating file paths as strings for simplicity, could be more specific

// Environment Block
env_block = {
    KEYWORD_ENV ~ env_variable_declaration* ~ KEYWORD_END
}

env_variable_declaration = {
    IDENTIFIER ~ ("." ~ IDENTIFIER)? ~ "=" ~ (STRING | NUMBER | BOOLEAN | variable_interpolation) // Simplified values for env
}

// Request Block
request_block = {
    KEYWORD_REQUEST ~ IDENTIFIER ~ request_method ~ request_url ~ config_section? ~ headers_section? ~ query_section? ~ body_section? ~ script_section? ~ KEYWORD_END
}

request_method = { KEYWORD_METHOD ~ HTTP_METHOD }
request_url    = { KEYWORD_URL ~ (variable_interpolation | !WHITESPACE ~ !NEWLINE ~ ANY)+ }
// URL can contain interpolation

// Optional sections within @request
config_section = {
    KEYWORD_CONFIG ~ "{" ~ config_setting* ~ "}"
}

config_setting = {
    depends_on_setting
  | delay_setting
  | timeout_setting
  | retries_setting
}

depends_on_setting = { KEYWORD_DEPENDS_ON ~ ":" ~ "[" ~ (IDENTIFIER ~ ("," ~ IDENTIFIER)*)? ~ "]" }
delay_setting      = { KEYWORD_DELAY ~ ":" ~ duration }
timeout_setting    = { KEYWORD_TIMEOUT ~ ":" ~ duration }
retries_setting    = { KEYWORD_RETRIES ~ ":" ~ NUMBER }

headers_section = {
    KEYWORD_HEADERS ~ "{" ~ header_pair* ~ "}"
}

header_pair = { (STRING | IDENTIFIER) ~ ":" ~ (STRING | variable_interpolation) }

query_section = {
    KEYWORD_QUERY ~ "{" ~ query_pair* ~ "}"
}

query_pair = { (STRING | IDENTIFIER) ~ ":" ~ (value | variable_interpolation) }
// Query values can be values or interpolations

// Body Section
body_section = {
    json_body_section
  | graphql_body_section
  | xml_body_section
  | text_body_section
  | form_urlencoded_body_section
  | multipart_body_section
}

json_body_section    = { KEYWORD_BODY ~ ":" ~ "json" ~ (object | array) }
graphql_body_section = { KEYWORD_BODY ~ ":" ~ "graphql" ~ ((!KEYWORD_VARIABLES ~ !KEYWORD_END ~ ANY)* ~ variables_section?) }
xml_body_section     = { KEYWORD_BODY ~ ":" ~ "xml" ~ (!KEYWORD_END ~ ANY)* }
// XML body is raw text until @end
text_body_section = { KEYWORD_BODY ~ ":" ~ "text" ~ (!KEYWORD_END ~ ANY)* }
// Text body is raw text until @end
form_urlencoded_body_section = { KEYWORD_BODY ~ ":" ~ "form-urlencoded" ~ (!KEYWORD_END ~ ANY)* }
// Form URL-encoded is raw text until @end
multipart_body_section = { KEYWORD_BODY ~ ":" ~ "multipart" ~ "{" ~ multipart_part* ~ "}" }

variables_section = {
    KEYWORD_VARIABLES ~ ":" ~ "json" ~ (object | array) // GraphQL variables are JSON object/array
}

multipart_part = {
    multipart_field
  | multipart_file
}

multipart_field = { KEYWORD_FIELD ~ (STRING) ~ "=" ~ (STRING | variable_interpolation) }
multipart_file  = { KEYWORD_FILE ~ (STRING) ~ "=" ~ file_path ~ (KEYWORD_TYPE ~ (STRING))? }

// Script Section
script_section = {
    KEYWORD_SCRIPT ~ ":" ~ KEYWORD_POST_REQUEST ~ "{" ~ script_content ~ "}"
}

// Capture everything inside the script block as a single string
script_content = @{ (!"}" ~ ANY)* }

// Call Statement (placeholder)
call_statement = { KEYWORD_CALL ~ IDENTIFIER }

// Top level file structure
file = {
    SOI ~ (env_block | request_block | call_statement)* ~ EOI
}
